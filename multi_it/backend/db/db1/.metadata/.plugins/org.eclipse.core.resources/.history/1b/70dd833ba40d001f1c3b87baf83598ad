-- CONNECTION: url=jdbc:oracle:thin:@//DESKTOP-MD0C8U4:1521/STR














-- New script in SCOTT.
-- Connection Type: dev 
-- Url: jdbc:oracle:thin:@//DESKTOP-MD0C8U4:1521/STR
-- workspace : C:\Users\dkswl\OneDrive\Documents\code_upload\Auto_window\multi_it\backend\db\db1
-- Date: 2024. 5. 9.
-- Time: 오전 9:45:33

-- 그룹함수와 단일행함수
--함수(FUNCTION) : 컬럼값을 읽어서 계산한 결과를 리턴함 
--단일행함수 : 컬럼에 기록된 N 개의 값을 읽어서 N 개의 결과를 리턴 
--그룹함수 : 컬럼에 기록된 N 개의 값을 읽어서 한개의 결과를 리턴


-- 단일행 함수
-- 문자관련함수 
-- LENGTH, CONCAT , SUBSTR,UPPER, LOWER, INSTR....


--CONCAT : 문자열 혹은 컬럼두개를 입력받아 하나로 합친후 리턴
SELECT CONCAT(CONCAT(EMPNO, ':'), ENAME) AS CONCAT_RESULT FROM EMP;

SELECT EMPNO || ':' || ENAME AS CONCAT_RESULT FROM EMP ;

SELECT * FROM EMP;


-- LENGTH : 길이 

SELECT LENGTH(ENAME) FROM EMP;



--TRIM : 주어진 컬럼이나 문자열의 앞/뒤에 지정한문자를 제거 

--LTRIM/ RTRIM : 주어진 컬럼이나 문자열 왼쪽/오른쪽에서 지정한 
--              문자 혹은 문자열을 제거한 나머지를 반환하는 함수 

SELECT LENGTH(TRIM(ENAME)) FROM EMP;

SELECT TRIM(BOTH 'A' FROM ENAME) FROM EMP; -- 양쪽끝에 A를 제거  

SELECT TRIM(LEADING 'A' FROM ENAME) FROM EMP; -- 앞쪽에 A를 제거
 
SELECT TRIM(TRAILING 'A' FROM ENAME) FROM EMP;  -- 뒷쪽에 A를 제거
-- REPLACE : 컬럼혹은 문자열을 입력받아 변경하고자 하는 문자열을 변경

SELECT REPLACE(ENAME, ' ', '') FROM EMP;

SELECT 
    REPLACE('서울시 강남구 역삼동 ', '역삼동', '삼성동') VAL
FROM DUAL;





--SUBSTR: 컬럼이나 문자열에서 지정한 위치로 부터 지정한 문자열을 잘라서 리턴하는 함수
--SUBSTR('문자열', 시작위치, 자를길이)
SELECT 
       ENAME 사원명
     , SUBSTR(TO_CHAR(HIREDATE,'YYMMDD') , 1, 2) --입사년도 2자리 yy
     , SUBSTR(TO_CHAR(HIREDATE,'YYMMDD'), 3, 2) --월 mm
     , SUBSTR(TO_CHAR(HIREDATE,'YYMMDD'), 5, 2) --일 dd
  FROM EMP;


SELECT * FROM emp;

SELECT 
    RPAD(SUBSTR(EMP_NO, 1, 7), 14, '*') AS 주민번호
FROM (
    SELECT '리사' ENAME , '123456-2890123' AS EMP_NO FROM DUAL
    UNION ALL --UNION ALL은 모든 결과를 단순히 결합
    SELECT '주혁' ENAME1 , '2345	s67-1901234' AS EMP_NO FROM DUAL
    UNION ALL
    SELECT '사나' ENAME , '345678-2012345' AS EMP_NO FROM DUAL
);



UPDATE EMP 
SET COMM = 0
WHERE COMM IS NULL;
ROLLBACK;


SELECT *
FROM EMP ;

SELECT SAL + COMM AS TOTAL
FROM EMP;


UPDATE EMP 
SET COMM = 0
WHERE COMM IS NULL;

COMMIT; 

SELECT SAL + COMM AS TOTAL -- 제대로계산됨
FROM EMP;

SELECT *
FROM EMP;


--NULL처리함수
--NVL(컬럼명, 컬럼값이 NULL 일때 바꿀값)

SELECT 
   *
FROM EMP;

SELECT 
    ENAME
    , COMM
    , NVL(COMM , 0) COMM1
FROM EMP;


SELECT 
    ENAME
    , JOB 
    , NVL(JOB  , '-') job1
FROM EMP;


--NVL2(컬럼명, 바꿀값1, 바꿀값2)
-- 해당컬럼이 값이 있으면 바꿀값 1로 변경
-- 해당 컬럼이 값이 NULL 일결우 바꿀 값 2로 변경 

SELECT 
   ENAME
   ,COMM
 , NVL2(COMM , 0.7,0.5) BONUS1
FROM EMP;


-- 숫자 처리 함수 : ABS, MOD, ROUND, FLOOR, TRUNC , CEIL
-- ABS(숫자 | 숫자 로 된 컬럼명 ) :절대값 구하는 함수

SELECT 
    ABS(-10) COL1
    , ABS(10) COL2
FROM DUAL;


-- MOD(숫자 | 숫자로된 컬럼명, 숫자 | 숫자로된컬럼명) : 두수를 나누어서 나머지를 구하는 함수 
-- 처음인자는 나우어지는 수, 두번째인자는 나눌수

SELECT 
    MOD(10, 5) COL1
    , MOD(10, 3) COL2
FROM DUAL;


-- ROUND( 숫자 | 숫자로된 컬럼명, [위치]) : 반올림해서 리턴하는 함수

SELECT ROUND(123.456) FROM DUAL;
SELECT ROUND(123.456, 0) FROM DUAL;
SELECT ROUND(123.456, 1) FROM DUAL;-- 소수점 첫째자리까지 출력(1번째에서 반올림된다)
SELECT ROUND(123.456, 2) FROM DUAL;
SELECT ROUND(123.456, -2) FROM DUAL;





-- FLOOR(숫자 | 숫자로된 컬럼명)
--: 내림처리 하는 함수 (인자로 전달받은 숫자 혹은 컬럼의 소수점 자리수를 버리는 함수)

SELECT FLOOR(123.456) FROM DUAL;
SELECT FLOOR(123.6789) FROM DUAL;


-- TRUNC(숫자 | 숫자로된 컬럼명 , [위치])
--: 내림처리 (절삭) 함수(인자로 전달받은 숫자 혹은 컬럼의 지정한 위치 이후의 소수점 자리수를 버리는 함수 )

SELECT TRUNC(123.456) FROM DUAL;
SELECT TRUNC(123.6789) FROM DUAL;
SELECT TRUNC(123.456, 1) FROM DUAL;
SELECT TRUNC(123.456, 2) FROM DUAL;
SELECT TRUNC(123.456, -1) FROM DUAL;

-- CEIL(숫자 | 숫자로된 컬럼명): 올림처리함수(소수점 기준으로 올림처리)
SELECT CEIL(123.456) FROM DUAL;
SELECT CEIL(123.6789) FROM DUAL;



-- 날짜 함수 : SYSDATE, MONTHS_BETWEEN, ADD_MONTH
--            , NEXT_DAY, LAST_DAY, EXTRACT


-- SYSDATE : 시스템에 저장되어있는 날짜를 반환하는함수
SELECT SYSDATE FROM DUAL;


-- MONTHS_BETWEEN(날짜, 날짜) : 두날짜의 개월수 차이를 숫자로 리턴하는 함수
SELECT 
    ENAME
    , HIREDATE
    ,CEIL(MONTHS_BETWEEN(SYSDATE, HIREDATE))COL1
FROM EMP;

-- ADD_MONTHS(날짜, 숫자): 날짜에 숫자만큼 개월수를 더해서 리턴

SELECT 
    ADD_MONTHS(SYSDATE,5) COL1
FROM DUAL;

SELECT 
    ADD_MONTHS(SYSDATE,-1) COL1
FROM DUAL;


--EMP 테이블에서 근무년수가 20년 이상인 직원 조회

SELECT * 
FROM EMP 
WHERE MONTHS_BETWEEN(sysdate, HIREDATE)>=240;


SELECT *
FROM EMP 
WHERE ADD_MONTHS(HIREDATE, 240)<=SYSDATE  ;  -- 모르겎음




--NEXT_DAY(기준날짜, 요일(문자|숫자)) : 기준날짜에서 구하려는 요일에 가장가까운 날짜리턴
SELECT SYSDATE, NEXT_DAY(SYSDATE,'목요일')NDAY FROM DUAL;
SELECT SYSDATE, NEXT_DAY(SYSDATE,5)NDAY FROM DUAL; -- 구하려는 요일이 숫자인경우 1 : 일요일~~~7 : 토요일
SELECT SYSDATE, NEXT_DAY(SYSDATE,'목')NDAY FROM DUAL;
SELECT SYSDATE, NEXT_DAY(SYSDATE, 'FRIDAY')NDAY FROM DUAL;




-- NLS_LANGUAGE 수정 

-- NLS(NATIONAL LANGUAGE SUPPORT) : 언어지원과 관련된 파라미터
SELECT * 
FROM SYS.NLS_SESSION_PARAMETERS
WHERE PARAMETER IN('NLS_LANGUAGE','NLS_DATE_FORMAT','NLS_DATE_LANGUAGE');

ALTER SESSION SET NLS_LANGUAGE = AMERICAN;
ALTER SESSION SET NLS_LANGUAGE = KOREAN;



--LAST_DAY(날짜 ) : 해당월의 마지막 날짜를 구하여 리턴
SELECT SYSDATE, LAST_DAY(SYSDATE) LDAY FROM DUAL;



--

SELECT HIREDATE , ADD_MONTHS(HIREDATE, 6)  FROM emp;


SELECT ENAME , HIREDATE , LAST_DAY(HIREDATE), abs(HIREDATE -SYSDATE) , SYSDATE -HIREDATE 
FROM emp



















